# Cloud Build configuration for GCP deployment
# Builds and deploys the API and frontend to Cloud Run

steps:
  # Build API Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/tenderflow-api:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/tenderflow-api:latest'
      - '-f'
      - 'apps/api/Dockerfile'
      - '.'
    dir: '.'
    
  # Build Frontend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/tenderflow-web:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/tenderflow-web:latest'
      - '-f'
      - 'apps/web/Dockerfile'
      - '--build-arg'
      - 'NEXT_PUBLIC_API_URL=https://api.tenderflow.app'
      - '.'
    dir: '.'
    
  # Push API image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/tenderflow-api:$COMMIT_SHA']
    
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/tenderflow-api:latest']
    
  # Push Frontend image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/tenderflow-web:$COMMIT_SHA']
    
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/tenderflow-web:latest']
    
  # Run database migrations
  - name: 'gcr.io/google-appengine/exec-wrapper'
    args:
      - '-i'
      - 'gcr.io/$PROJECT_ID/tenderflow-api:$COMMIT_SHA'
      - '-s'
      - '${_CLOUD_SQL_CONNECTION_NAME}'
      - '-e'
      - 'DATABASE_URL=${_DATABASE_URL}'
      - '--'
      - 'npm'
      - 'run'
      - 'migrate:deploy'
    dir: 'apps/api'
    
  # Deploy API to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'tenderflow-api'
      - '--image'
      - 'gcr.io/$PROJECT_ID/tenderflow-api:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--add-cloudsql-instances'
      - '${_CLOUD_SQL_CONNECTION_NAME}'
      - '--set-env-vars'
      - 'NODE_ENV=production'
      - '--set-secrets'
      - 'DATABASE_URL=database-url:latest'
      - '--set-secrets'
      - 'JWT_SECRET=jwt-secret:latest'
      - '--set-secrets'
      - 'JWT_REFRESH_SECRET=jwt-refresh-secret:latest'
      - '--set-secrets'
      - 'REDIS_URL=redis-url:latest'
      - '--set-secrets'
      - 'MINIO_ACCESS_KEY=minio-access-key:latest'
      - '--set-secrets'
      - 'MINIO_SECRET_KEY=minio-secret-key:latest'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '100'
      - '--cpu'
      - '2'
      - '--memory'
      - '4Gi'
      - '--timeout'
      - '60'
      - '--concurrency'
      - '250'
      
  # Deploy Frontend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'tenderflow-web'
      - '--image'
      - 'gcr.io/$PROJECT_ID/tenderflow-web:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '50'
      - '--cpu'
      - '1'
      - '--memory'
      - '2Gi'
      - '--timeout'
      - '60'
      - '--concurrency'
      - '80'
      
  # Update traffic to new revision (Blue-Green deployment)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'services'
      - 'update-traffic'
      - 'tenderflow-api'
      - '--region'
      - '${_REGION}'
      - '--to-latest'
      
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'services'
      - 'update-traffic'
      - 'tenderflow-web'
      - '--region'
      - '${_REGION}'
      - '--to-latest'

# Build configuration
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true

# Substitutions (to be provided via trigger or command line)
substitutions:
  _REGION: 'us-central1'
  _CLOUD_SQL_CONNECTION_NAME: 'PROJECT_ID:us-central1:tenderflow-db'
  _DATABASE_URL: 'postgresql://postgres:PASSWORD@/tenderflow?host=/cloudsql/PROJECT_ID:us-central1:tenderflow-db'

# Build timeout
timeout: '1800s'