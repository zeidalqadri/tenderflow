# PgBouncer Configuration for TenderFlow Database Connection Multiplexing
# Optimized for 10,000+ concurrent users with government-grade reliability

apiVersion: v1
kind: ConfigMap
metadata:
  name: pgbouncer-config
  namespace: tenderflow-system
data:
  pgbouncer.ini: |
    [databases]
    ; TenderFlow database configurations
    tenderflow = host=tenderflow-alloydb-primary port=5432 dbname=tenderflow user=tenderflow_app pool_size=50 max_db_connections=100
    tenderflow_readonly = host=tenderflow-alloydb-read-pool port=5432 dbname=tenderflow user=tenderflow_readonly pool_size=30 max_db_connections=60
    
    [pgbouncer]
    ; Connection pooling configuration optimized for high concurrency
    
    ; Pool size settings for 10k+ users
    default_pool_size = 50
    min_pool_size = 10
    max_client_conn = 2000          ; Maximum client connections
    reserve_pool_size = 10          ; Emergency connection reserve
    
    ; Pool modes - transaction pooling for maximum efficiency
    pool_mode = transaction
    
    ; Connection management
    max_db_connections = 200        ; Total database connections across all pools
    max_user_connections = 100      ; Per-user connection limit
    
    ; Timeouts optimized for government SLA requirements
    server_reset_query = DISCARD ALL
    server_reset_query_always = 0
    server_check_delay = 30         ; Health check interval (seconds)
    server_check_query = SELECT 1
    
    ; Client connection timeouts
    query_timeout = 30              ; 30 second query timeout
    query_wait_timeout = 120        ; 2 minute wait timeout
    client_idle_timeout = 300       ; 5 minute client idle timeout
    server_idle_timeout = 600       ; 10 minute server idle timeout
    server_lifetime = 3600          ; 1 hour server connection lifetime
    
    ; Security and authentication
    auth_type = scram-sha-256       ; Secure authentication
    auth_file = /etc/pgbouncer/userlist.txt
    
    ; Logging for audit compliance
    log_connections = 1
    log_disconnections = 1
    log_pooler_errors = 1
    log_stats = 1
    stats_period = 60               ; Log stats every minute
    
    ; Administrative interface
    admin_users = pgbouncer_admin
    stats_users = pgbouncer_admin, tenderflow_monitor
    
    ; Listen configuration
    listen_addr = 0.0.0.0
    listen_port = 5432
    
    ; SSL/TLS configuration for encrypted connections
    server_tls_sslmode = require
    server_tls_ca_file = /etc/ssl/certs/server-ca.pem
    server_tls_cert_file = /etc/ssl/certs/client-cert.pem  
    server_tls_key_file = /etc/ssl/private/client-key.pem
    
    ; Performance tuning
    server_round_robin = 1          ; Load balancing
    ignore_startup_parameters = extra_float_digits
    application_name_add_host = 1   ; Add hostname to application_name
    
    ; Government compliance settings
    log_destinations = stderr,syslog
    syslog_facility = local0
    syslog_ident = pgbouncer-tenderflow
    
  userlist.txt: |
    ; PgBouncer user authentication file
    ; Format: "username" "password" 
    "tenderflow_app" "PLACEHOLDER_PASSWORD"
    "tenderflow_readonly" "PLACEHOLDER_PASSWORD"
    "pgbouncer_admin" "PLACEHOLDER_ADMIN_PASSWORD"
    "tenderflow_monitor" "PLACEHOLDER_MONITOR_PASSWORD"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgbouncer
  namespace: tenderflow-system
  labels:
    app: pgbouncer
    component: database-proxy
spec:
  replicas: 3                    # High availability with 3 replicas
  selector:
    matchLabels:
      app: pgbouncer
  template:
    metadata:
      labels:
        app: pgbouncer
        component: database-proxy
    spec:
      serviceAccountName: pgbouncer-service-account
      
      # Security context for government compliance
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
        seccompProfile:
          type: RuntimeDefault
      
      containers:
      - name: pgbouncer
        image: pgbouncer/pgbouncer:1.21.0
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # Resource limits for predictable performance
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi" 
            cpu: "500m"
        
        # Configuration
        env:
        - name: DATABASES_HOST
          valueFrom:
            secretKeyRef:
              name: database-connection
              key: host
        - name: DATABASES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-connection
              key: password
        
        # Ports
        ports:
        - containerPort: 5432
          name: postgresql
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        
        # Health checks
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "pg_isready -h localhost -p 5432"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          
        readinessProbe:
          exec:
            command:
            - /bin/sh  
            - -c
            - "pg_isready -h localhost -p 5432"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
          
        # Volume mounts
        volumeMounts:
        - name: pgbouncer-config
          mountPath: /etc/pgbouncer/pgbouncer.ini
          subPath: pgbouncer.ini
          readOnly: true
        - name: pgbouncer-config
          mountPath: /etc/pgbouncer/userlist.txt
          subPath: userlist.txt
          readOnly: true
        - name: ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: true
        - name: ssl-private
          mountPath: /etc/ssl/private
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        - name: run-volume
          mountPath: /run
          
      # Prometheus metrics sidecar
      - name: pgbouncer-exporter
        image: prometheuscommunity/pgbouncer-exporter:v0.7.0
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
            
        env:
        - name: PGBOUNCER_EXPORTER_HOST
          value: "localhost"
        - name: PGBOUNCER_EXPORTER_PORT
          value: "5432"
        - name: PGBOUNCER_EXPORTER_USER
          value: "pgbouncer_admin"
        - name: PGBOUNCER_EXPORTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pgbouncer-admin
              key: password
              
        ports:
        - containerPort: 9127
          name: metrics
          protocol: TCP
      
      # Volumes
      volumes:
      - name: pgbouncer-config
        configMap:
          name: pgbouncer-config
      - name: ssl-certs
        secret:
          secretName: database-ssl-certs
          defaultMode: 0644
      - name: ssl-private
        secret:
          secretName: database-ssl-private
          defaultMode: 0600
      - name: tmp-volume
        emptyDir: {}
      - name: run-volume
        emptyDir: {}
      
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - pgbouncer
              topologyKey: kubernetes.io/hostname

---
# Service Account for PgBouncer
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pgbouncer-service-account
  namespace: tenderflow-system
  annotations:
    iam.gke.io/gcp-service-account: pgbouncer@tensurv.iam.gserviceaccount.com